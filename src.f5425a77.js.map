{"version":3,"sources":["src/programs/shader.ts","src/gl.ts","src/programs/mainObject.ts","src/renderer.ts","vendor/math.js","src/transformable.ts","src/model.ts","src/camera.ts","src/dropbox.ts","src/index.ts"],"names":["Vector3","x","y","z","v","undefined","Math","sqrt","mag","magnitude","Float32Array","Matrix4","raw","identity","translate","rad","rotateY","rotateX","rotateZ","vec3","scale","invert","i","length","a","out","fovy","aspect","near","far","f","tan","nf","left","right","bottom","top","lr","bt","a01","a02","a03","a12","a13","a23","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","mat4","w","c1r1","c2r1","c3r1","c4r1","c1r2","c2r2","c3r2","c4r2","c1r3","c2r3","c3r3","c4r3","m","b","b0","b1","b2","b3","s","sin","c","cos","axis","t","b12","b20","b21","b22","len","abs","mat"],"mappings":"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","file":"src.f5425a77.js","sourceRoot":"..","sourcesContent":["import { Matrix4 } from \"../../vendor/math.js\";\n\nexport const ATTR_POSITION_NAME = \"a_position\";\nexport const ATTR_POSITION_LOC = 0;\nexport const ATTR_NORMAL_NAME = \"a_norm\";\nexport const ATTR_NORMAL_LOC = 1;\nexport const ATTR_UV_NAME = \"a_uv\";\nexport const ATTR_UV_LOC = 2;\n\nexport default class Shader {\n  program: WebGLProgram | null;\n  gl: MyWebGL2RenderingContext;\n  matrixPosition: WebGLUniformLocation | null;\n  texturePosition: WebGLUniformLocation | null;\n  vertexShader: VertexShaderType;\n  fragmentShader: FragmentShaderType;\n  constructor(\n    gl: MyWebGL2RenderingContext,\n    vertexShader: VertexShaderType,\n    fragmentShader: FragmentShaderType\n  ) {\n    const program = ShaderUtil.createProgram(gl, vertexShader, fragmentShader);\n    this.program = program;\n\n    if (this.program) {\n      this.gl = gl;\n      this.matrixPosition = this.gl.getUniformLocation(this.program, \"u_MVP\");\n      this.texturePosition = this.gl.getUniformLocation(\n        this.program,\n        \"uMainTex\"\n      );\n    }\n  }\n\n  activate(): this {\n    this.gl.useProgram(this.program);\n    return this;\n  }\n  deactivate(): this {\n    this.gl.useProgram(null);\n    return this;\n  }\n\n  preRender(mvpData: Matrix4): this {\n    this.gl.uniformMatrix4fv(this.matrixPosition, false, mvpData);\n\n    this.gl.activeTexture(this.gl.TEXTURE0);\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.textureID);\n    this.gl.uniform1i(this.texturePosition, 0);\n    return this;\n  }\n\n  setTextureID(id: WebGLTexture): this {\n    this.textureID = id;\n    return this;\n  }\n\n  render(model): this {\n    this.gl.bindVertexArray(model.mesh.vao);\n    this.gl.enableVertexAttribArray(0);\n\n    // UNSIGNED_SHORT, not UNSIGNED_INT\n    this.gl.drawElements(\n      this.gl.TRIANGLES,\n      model.mesh.indexCount,\n      this.gl.UNSIGNED_SHORT,\n      0\n    );\n    return this;\n  }\n}\n\nexport class ShaderUtil {\n  static createProgram(\n    gl: MyWebGL2RenderingContext,\n    vShaderSrc: string,\n    vFragmentSrc: string\n  ): WebGLProgram | null {\n    // compile\n    const vShader = ShaderUtil.compileShader(gl, gl.VERTEX_SHADER, vShaderSrc);\n    const fShader = ShaderUtil.compileShader(\n      gl,\n      gl.FRAGMENT_SHADER,\n      vFragmentSrc\n    );\n    if (!(vShader && fShader)) {\n      console.error(\"ShaderUtil.createProgram: error compiling shaders\");\n      return null;\n    }\n    const program = gl.createProgram();\n    if (!program) {\n      return null;\n    }\n    gl.attachShader(program, vShader);\n    gl.attachShader(program, fShader);\n\n    gl.bindAttribLocation(program, ATTR_POSITION_LOC, ATTR_POSITION_NAME);\n    gl.bindAttribLocation(program, ATTR_NORMAL_LOC, ATTR_NORMAL_NAME);\n    gl.bindAttribLocation(program, ATTR_UV_LOC, ATTR_UV_NAME);\n\n    gl.linkProgram(program);\n\n    const status = <boolean>gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!status) {\n      console.error(\"Error linking program : \", gl.getProgramInfoLog(program));\n      gl.deleteProgram(program);\n      return null;\n    }\n\n    // TODO - only do if debugging. wrap this in conditional\n    gl.validateProgram(program);\n    if (!gl.getProgramParameter(program, gl.VALIDATE_STATUS)) {\n      console.error(\"Error validating program\", gl.getProgramInfoLog(program));\n      gl.deleteProgram(program);\n      return null;\n    }\n\n    // Cleanup\n    gl.detachShader(program, vShader);\n    gl.detachShader(program, fShader);\n\n    gl.deleteShader(vShader);\n    gl.deleteShader(fShader);\n\n    return program;\n  }\n\n  static compileShader(\n    gl: MyWebGL2RenderingContext,\n    type: number,\n    src: FragmentShaderType | VertexShaderType\n  ): WebGLShader | null {\n    const shader = gl.createShader(type);\n    if (!shader) {\n      return null;\n    }\n    gl.shaderSource(shader, src);\n    gl.compileShader(shader);\n    const status = <boolean>gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!status) {\n      console.error(\n        \"Error compiling shader : \" + src,\n        gl.getShaderInfoLog(shader)\n      );\n      gl.deleteShader(shader);\n      return null;\n    }\n    return shader;\n  }\n}\n","import {\n  ATTR_POSITION_LOC,\n  ATTR_NORMAL_LOC,\n  ATTR_UV_LOC,\n} from \"./programs/shader\";\n\nfunction GLInstance(id: string): MyWebGL2RenderingContext {\n  const canvas = <HTMLCanvasElement>document.getElementById(id);\n  const gl = <MyWebGL2RenderingContext>canvas.getContext(\"webgl2\");\n\n  if (!gl) {\n    alert(\"WebGL is not found on this browser, please try another browser\");\n  }\n  console.log(\"WebGL initialized successfully\");\n\n  /**\n   *\n   * @param wRatio width percentage of screen\n   * @param hRatio height percentage of screen\n   */\n  gl.setWindowSize = function (wRatio = 1, hRatio = 1) {\n    const w = window.innerWidth * wRatio;\n    const h = window.innerHeight * hRatio;\n\n    canvas.style.width = w + \"px\";\n    canvas.style.height = h + \"px\";\n\n    canvas.width = w;\n    canvas.height = h;\n\n    this.viewport(0, 0, w, h);\n\n    return this;\n  };\n\n  gl.enable(gl.CULL_FACE);\n  gl.enable(gl.DEPTH_TEST);\n\n  gl.setClearColor = function (\n    red: number,\n    green: number,\n    blue: number,\n    alpha: number\n  ) {\n    this.clearColor(red, green, blue, alpha);\n\n    return this;\n  };\n\n  gl.createMeshVAO = function (\n    name,\n    indices,\n    vertices,\n    norms,\n    uvs\n  ): MeshObject {\n    const vao = gl.createVertexArray();\n    let vboVertices = null;\n    let vboNormals = null;\n    let vboUVs = null;\n    let ibo = null;\n    let indexCount = null;\n\n    gl.bindVertexArray(vao);\n\n    if (vertices) {\n      const data =\n        vertices instanceof Float32Array\n          ? vertices\n          : new Float32Array(vertices);\n      vboVertices = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, vboVertices);\n      gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n      gl.enableVertexAttribArray(ATTR_POSITION_LOC);\n      gl.vertexAttribPointer(ATTR_POSITION_LOC, 3, gl.FLOAT, false, 0, 0);\n    }\n\n    if (norms) {\n      const data =\n        norms instanceof Float32Array ? norms : new Float32Array(norms);\n      vboNormals = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, vboNormals);\n      gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n      gl.enableVertexAttribArray(ATTR_NORMAL_LOC);\n      gl.vertexAttribPointer(ATTR_NORMAL_LOC, 3, gl.FLOAT, false, 0, 0);\n    }\n    if (uvs) {\n      const data = uvs instanceof Float32Array ? uvs : new Float32Array(uvs);\n      vboUVs = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, vboUVs);\n      gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n      gl.enableVertexAttribArray(ATTR_UV_LOC);\n      gl.vertexAttribPointer(ATTR_UV_LOC, 2, gl.FLOAT, false, 0, 0);\n    }\n\n    if (indices) {\n      const data =\n        indices instanceof Uint16Array ? indices : new Uint16Array(indices);\n      indexCount = indices.length;\n      ibo = gl.createBuffer();\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, gl.STATIC_DRAW);\n    }\n\n    if (!uvs?.length) {\n      alert(\"UVs not found, please unwrap model and export .obj again.\");\n    }\n\n    return {\n      name,\n      vao,\n      vboVertices,\n      vboNormals,\n      vboUVs,\n      ibo,\n      indexCount,\n    };\n  };\n\n  gl.loadTexture = function (name, image, flipY = true): WebGLTexture | null {\n    const textureBuffer = this.createTexture();\n    // Flipping the y coord of UV's, make this user configerable since Blender does UV's this way, but IDK about others.\n    if (flipY) {\n      this.pixelStorei(this.UNPACK_FLIP_Y_WEBGL, true);\n    }\n\n    this.bindTexture(this.TEXTURE_2D, textureBuffer);\n    this.texImage2D(\n      this.TEXTURE_2D,\n      0,\n      this.RGBA,\n      this.RGBA,\n      this.UNSIGNED_BYTE,\n      image\n    );\n\n    this.texParameteri(this.TEXTURE_2D, this.TEXTURE_MAG_FILTER, this.LINEAR);\n    this.texParameteri(\n      this.TEXTURE_2D,\n      this.TEXTURE_MIN_FILTER,\n      this.LINEAR_MIPMAP_NEAREST\n    );\n    this.generateMipmap(this.TEXTURE_2D);\n\n    this.bindTexture(this.TEXTURE_2D, null);\n\n    // flip back\n    if (flipY) {\n      this.pixelStorei(this.UNPACK_FLIP_Y_WEBGL, false);\n    }\n\n    return textureBuffer;\n  };\n\n  return gl;\n}\n\nexport default GLInstance;\n","import Shader from \"./shader\";\nimport { Matrix4 } from \"../../vendor/math.js\";\n\nconst vertexShader = <VertexShaderType>`#version 300 es\n    in vec3 a_position;\n    in vec3 a_normal;\n    in vec2 a_uv;\n\n    uniform mat4 u_MVP;\n\n    out highp vec3 positionCoord;\n    out highp vec3 normalCoord;\n    out highp vec2 uvCoord;\n\n    void main(void) {\n        normalCoord = a_normal;\n        uvCoord = a_uv;\n        positionCoord = a_position;\n        gl_Position = u_MVP * vec4(a_position, 1.0);\n    }\n`;\n\nconst fragmentShader = <FragmentShaderType>`#version 300 es\n    precision highp float;\n\n    in highp vec2 uvCoord;\n    in highp vec3 normalCoord;\n    in highp vec3 positionCoord;\n\n    uniform float uUVWeight;\n    uniform float uNormalWeight;\n    uniform float uPositionWeight;\n    uniform sampler2D uMainTex;\n\n    out vec4 color;\n    void main(void) {\n        // color = vec4(textCoord, 1.0, 1.0);\n        // color = texture(uMainTex, textCoord);\n        color = vec4(uvCoord, 1.0, 1.0) * uUVWeight \n                + vec4(normalCoord, 1.0) * uNormalWeight\n                + vec4(positionCoord, 1.0) * uPositionWeight;\n    }\n`;\n\nexport default class MainObject extends Shader {\n  uvWeightPosition: WebGLUniformLocation | null;\n  normalWeightPosition: WebGLUniformLocation | null;\n  positionWeightPosition: WebGLUniformLocation | null;\n  constructor(gl: MyWebGL2RenderingContext) {\n    super(gl, vertexShader, fragmentShader);\n\n    if (this.program) {\n      this.uvWeightPosition = this.gl.getUniformLocation(\n        this.program,\n        \"uUVWeight\"\n      );\n      this.normalWeightPosition = this.gl.getUniformLocation(\n        this.program,\n        \"uNormalWeight\"\n      );\n      this.positionWeightPosition = this.gl.getUniformLocation(\n        this.program,\n        \"uPositionWeight\"\n      );\n    }\n  }\n\n  preRender(mvpData: Matrix4): this {\n    const uvWeight = document.querySelector(\"#color_uv\")?.value;\n    const normalWeight = document.querySelector(\"#color_position\")?.value;\n    const positionWeight = document.querySelector(\"#color_normals\")?.value;\n    this.gl.uniform1f(this.uvWeightPosition, uvWeight);\n    this.gl.uniform1f(this.normalWeightPosition, normalWeight);\n    this.gl.uniform1f(this.positionWeightPosition, positionWeight);\n    return super.preRender(mvpData);\n  }\n}\n","class Renderer {\n  static instance: Renderer;\n  static exists: boolean;\n  gl: MyWebGL2RenderingContext;\n\n  constructor(gl: MyWebGL2RenderingContext) {\n    this.gl = gl;\n    if (Renderer.exists) {\n      return Renderer.instance;\n    }\n    Renderer.instance = this;\n    Renderer.exists = true;\n  }\n\n  draw(cb: () => void): void {\n    let then = 0;\n    const loop = (now: number) => {\n      cb();\n\n      if (then === 0) {\n        then = now;\n      }\n\n      const fps = 120;\n      const interval = 1000 / fps;\n      const delta = now - then;\n\n      if (delta >= interval) {\n        this.clear();\n        cb();\n        then = now - (delta % interval);\n      }\n      // Cleanup\n      // this.gl.useProgram(null);\n      // this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\n      // this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null);\n      requestAnimationFrame(loop);\n      return;\n    };\n    requestAnimationFrame(loop);\n    return;\n  }\n\n  clear(): this {\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n    this.gl.clear(this.gl.DEPTH_BUFFER_BIT);\n    this.gl.clear(this.gl.STENCIL_BUFFER_BIT);\n\n    return this;\n  }\n}\n\nexport default Renderer;\n","// From https://raw.githubusercontent.com/sketchpunk/FunWithWebGL2/master/lesson_005/Math.js\n// Basically a stripped down version of http://glmatrix.net/\n//###########################################################################################\nexport class Vector3 {\n  constructor(x, y, z) {\n    this.x = x || 0.0;\n    this.y = y || 0.0;\n    this.z = z || 0.0;\n  }\n\n  magnitude(v) {\n    //Only get the magnitude of this vector\n    if (v === undefined)\n      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\n    //Get magnitude based on another vector\n    const x = v.x - this.x,\n      y = v.y - this.y,\n      z = v.y - this.z;\n\n    return Math.sqrt(x * x + y * y + z * z);\n  }\n\n  normalize() {\n    const mag = this.magnitude();\n    this.x /= mag;\n    this.y /= mag;\n    this.z /= mag;\n    return this;\n  }\n\n  set(x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n  }\n\n  multiScalar(v) {\n    this.x *= v;\n    this.y *= v;\n    this.z *= v;\n    return this;\n  }\n\n  getArray() {\n    return [this.x, this.y, this.z];\n  }\n  getFloatArray() {\n    return new Float32Array([this.x, this.y, this.z]);\n  }\n  clone() {\n    return new Vector3(this.x, this.y, this.z);\n  }\n}\n\n//###########################################################################################\nexport class Matrix4 {\n  constructor() {\n    this.raw = Matrix4.identity();\n  }\n\n  //....................................................................\n  //Transformations Methods\n  vtranslate(v) {\n    Matrix4.translate(this.raw, v.x, v.y, v.z);\n    return this;\n  }\n  translate(x, y, z) {\n    Matrix4.translate(this.raw, x, y, z);\n    return this;\n  }\n\n  rotateY(rad) {\n    Matrix4.rotateY(this.raw, rad);\n    return this;\n  }\n  rotateX(rad) {\n    Matrix4.rotateX(this.raw, rad);\n    return this;\n  }\n  rotateZ(rad) {\n    Matrix4.rotateZ(this.raw, rad);\n    return this;\n  }\n\n  vscale(vec3) {\n    Matrix4.scale(this.raw, vec3.x, vec3.y, vec3.z);\n    return this;\n  }\n  scale(x, y, z) {\n    Matrix4.scale(this.raw, x, y, z);\n    return this;\n  }\n\n  invert() {\n    Matrix4.invert(this.raw);\n    return this;\n  }\n\n  //....................................................................\n  //Methods\n  //Bring is back to identity without changing the transform values.\n  resetRotation() {\n    for (let i = 0; i < this.raw.length; i++) {\n      if (i >= 12 && i <= 14) continue;\n      this.raw[i] = i % 5 == 0 ? 1 : 0; //only positions 0,5,10,15 need to be 1 else 0.\n    }\n\n    return this;\n  }\n\n  //reset data back to identity.\n  reset() {\n    for (let i = 0; i < this.raw.length; i++) this.raw[i] = i % 5 == 0 ? 1 : 0; //only positions 0,5,10,15 need to be 1 else 0.\n    return this;\n  }\n\n  //....................................................................\n  //Static Data Methods\n  static identity() {\n    const a = new Float32Array(16);\n    a[0] = a[5] = a[10] = a[15] = 1;\n    return a;\n  }\n\n  //from glMatrix\n  static perspective(out, fovy, aspect, near, far) {\n    const f = 1.0 / Math.tan(fovy / 2),\n      nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 2 * far * near * nf;\n    out[15] = 0;\n  }\n\n  static ortho(out, left, right, bottom, top, near, far) {\n    const lr = 1 / (left - right),\n      bt = 1 / (bottom - top),\n      nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n  }\n\n  //https://github.com/toji/gl-matrix/blob/master/src/gl-matrix/mat4.js\n  //make the rows into the columns\n  static transpose(out, a) {\n    //If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n      const a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a12 = a[6],\n        a13 = a[7],\n        a23 = a[11];\n      out[1] = a[4];\n      out[2] = a[8];\n      out[3] = a[12];\n      out[4] = a01;\n      out[6] = a[9];\n      out[7] = a[13];\n      out[8] = a02;\n      out[9] = a12;\n      out[11] = a[14];\n      out[12] = a03;\n      out[13] = a13;\n      out[14] = a23;\n    } else {\n      out[0] = a[0];\n      out[1] = a[4];\n      out[2] = a[8];\n      out[3] = a[12];\n      out[4] = a[1];\n      out[5] = a[5];\n      out[6] = a[9];\n      out[7] = a[13];\n      out[8] = a[2];\n      out[9] = a[6];\n      out[10] = a[10];\n      out[11] = a[14];\n      out[12] = a[3];\n      out[13] = a[7];\n      out[14] = a[11];\n      out[15] = a[15];\n    }\n\n    return out;\n  }\n\n  //Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n  static normalMat3(out, a) {\n    let a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3],\n      a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7],\n      a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11],\n      a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15],\n      b00 = a00 * a11 - a01 * a10,\n      b01 = a00 * a12 - a02 * a10,\n      b02 = a00 * a13 - a03 * a10,\n      b03 = a01 * a12 - a02 * a11,\n      b04 = a01 * a13 - a03 * a11,\n      b05 = a02 * a13 - a03 * a12,\n      b06 = a20 * a31 - a21 * a30,\n      b07 = a20 * a32 - a22 * a30,\n      b08 = a20 * a33 - a23 * a30,\n      b09 = a21 * a32 - a22 * a31,\n      b10 = a21 * a33 - a23 * a31,\n      b11 = a22 * a33 - a23 * a32,\n      // Calculate the determinant\n      det =\n        b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) return null;\n\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    return out;\n  }\n\n  //....................................................................\n  //Static Operation\n\n  //https://github.com/gregtatum/mdn-model-view-projection/blob/master/shared/matrices.js\n  static multiplyVector(mat4, v) {\n    const x = v[0],\n      y = v[1],\n      z = v[2],\n      w = v[3];\n    const c1r1 = mat4[0],\n      c2r1 = mat4[1],\n      c3r1 = mat4[2],\n      c4r1 = mat4[3],\n      c1r2 = mat4[4],\n      c2r2 = mat4[5],\n      c3r2 = mat4[6],\n      c4r2 = mat4[7],\n      c1r3 = mat4[8],\n      c2r3 = mat4[9],\n      c3r3 = mat4[10],\n      c4r3 = mat4[11],\n      c1r4 = mat4[12],\n      c2r4 = mat4[13],\n      c3r4 = mat4[14],\n      c4r4 = mat4[15];\n\n    return [\n      x * c1r1 + y * c1r2 + z * c1r3 + w * c1r4,\n      x * c2r1 + y * c2r2 + z * c2r3 + w * c2r4,\n      x * c3r1 + y * c3r2 + z * c3r3 + w * c3r4,\n      x * c4r1 + y * c4r2 + z * c4r3 + w * c4r4,\n    ];\n  }\n\n  //https://github.com/toji/gl-matrix/blob/master/src/gl-matrix/vec4.js, vec4.transformMat4\n  static transformVec4(out, v, m) {\n    out[0] = m[0] * v[0] + m[4] * v[1] + m[8] * v[2] + m[12] * v[3];\n    out[1] = m[1] * v[0] + m[5] * v[1] + m[9] * v[2] + m[13] * v[3];\n    out[2] = m[2] * v[0] + m[6] * v[1] + m[10] * v[2] + m[14] * v[3];\n    out[3] = m[3] * v[0] + m[7] * v[1] + m[11] * v[2] + m[15] * v[3];\n    return out;\n  }\n\n  //From glMatrix\n  //Multiple two mat4 together\n  static mult(out, a, b) {\n    const a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3],\n      a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7],\n      a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11],\n      a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    let b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[4];\n    b1 = b[5];\n    b2 = b[6];\n    b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[8];\n    b1 = b[9];\n    b2 = b[10];\n    b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[12];\n    b1 = b[13];\n    b2 = b[14];\n    b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return out;\n  }\n\n  //....................................................................\n  //Static Transformation\n  static scale(out, x, y, z) {\n    out[0] *= x;\n    out[1] *= x;\n    out[2] *= x;\n    out[3] *= x;\n    out[4] *= y;\n    out[5] *= y;\n    out[6] *= y;\n    out[7] *= y;\n    out[8] *= z;\n    out[9] *= z;\n    out[10] *= z;\n    out[11] *= z;\n    return out;\n  }\n\n  static rotateY(out, rad) {\n    const s = Math.sin(rad),\n      c = Math.cos(rad),\n      a00 = out[0],\n      a01 = out[1],\n      a02 = out[2],\n      a03 = out[3],\n      a20 = out[8],\n      a21 = out[9],\n      a22 = out[10],\n      a23 = out[11];\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c - a20 * s;\n    out[1] = a01 * c - a21 * s;\n    out[2] = a02 * c - a22 * s;\n    out[3] = a03 * c - a23 * s;\n    out[8] = a00 * s + a20 * c;\n    out[9] = a01 * s + a21 * c;\n    out[10] = a02 * s + a22 * c;\n    out[11] = a03 * s + a23 * c;\n    return out;\n  }\n\n  static rotateX(out, rad) {\n    const s = Math.sin(rad),\n      c = Math.cos(rad),\n      a10 = out[4],\n      a11 = out[5],\n      a12 = out[6],\n      a13 = out[7],\n      a20 = out[8],\n      a21 = out[9],\n      a22 = out[10],\n      a23 = out[11];\n\n    // Perform axis-specific matrix multiplication\n    out[4] = a10 * c + a20 * s;\n    out[5] = a11 * c + a21 * s;\n    out[6] = a12 * c + a22 * s;\n    out[7] = a13 * c + a23 * s;\n    out[8] = a20 * c - a10 * s;\n    out[9] = a21 * c - a11 * s;\n    out[10] = a22 * c - a12 * s;\n    out[11] = a23 * c - a13 * s;\n    return out;\n  }\n\n  static rotateZ(out, rad) {\n    const s = Math.sin(rad),\n      c = Math.cos(rad),\n      a00 = out[0],\n      a01 = out[1],\n      a02 = out[2],\n      a03 = out[3],\n      a10 = out[4],\n      a11 = out[5],\n      a12 = out[6],\n      a13 = out[7];\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c + a10 * s;\n    out[1] = a01 * c + a11 * s;\n    out[2] = a02 * c + a12 * s;\n    out[3] = a03 * c + a13 * s;\n    out[4] = a10 * c - a00 * s;\n    out[5] = a11 * c - a01 * s;\n    out[6] = a12 * c - a02 * s;\n    out[7] = a13 * c - a03 * s;\n    return out;\n  }\n\n  static rotate(out, rad, axis) {\n    let x = axis[0],\n      y = axis[1],\n      z = axis[2],\n      len = Math.sqrt(x * x + y * y + z * z),\n      s,\n      c,\n      t,\n      a00,\n      a01,\n      a02,\n      a03,\n      a10,\n      a11,\n      a12,\n      a13,\n      a20,\n      a21,\n      a22,\n      a23,\n      b00,\n      b01,\n      b02,\n      b10,\n      b11,\n      b12,\n      b20,\n      b21,\n      b22;\n\n    if (Math.abs(len) < 0.000001) {\n      return null;\n    }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = out[0];\n    a01 = out[1];\n    a02 = out[2];\n    a03 = out[3];\n    a10 = out[4];\n    a11 = out[5];\n    a12 = out[6];\n    a13 = out[7];\n    a20 = out[8];\n    a21 = out[9];\n    a22 = out[10];\n    a23 = out[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c;\n    b01 = y * x * t + z * s;\n    b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s;\n    b11 = y * y * t + c;\n    b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s;\n    b21 = y * z * t - x * s;\n    b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n  }\n\n  static invert(out, mat) {\n    if (mat === undefined) mat = out; //If input isn't sent, then output is also input\n\n    let a00 = mat[0],\n      a01 = mat[1],\n      a02 = mat[2],\n      a03 = mat[3],\n      a10 = mat[4],\n      a11 = mat[5],\n      a12 = mat[6],\n      a13 = mat[7],\n      a20 = mat[8],\n      a21 = mat[9],\n      a22 = mat[10],\n      a23 = mat[11],\n      a30 = mat[12],\n      a31 = mat[13],\n      a32 = mat[14],\n      a33 = mat[15],\n      b00 = a00 * a11 - a01 * a10,\n      b01 = a00 * a12 - a02 * a10,\n      b02 = a00 * a13 - a03 * a10,\n      b03 = a01 * a12 - a02 * a11,\n      b04 = a01 * a13 - a03 * a11,\n      b05 = a02 * a13 - a03 * a12,\n      b06 = a20 * a31 - a21 * a30,\n      b07 = a20 * a32 - a22 * a30,\n      b08 = a20 * a33 - a23 * a30,\n      b09 = a21 * a32 - a22 * a31,\n      b10 = a21 * a33 - a23 * a31,\n      b11 = a22 * a33 - a23 * a32,\n      // Calculate the determinant\n      det =\n        b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) return false;\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return true;\n  }\n\n  //https://github.com/toji/gl-matrix/blob/master/src/gl-matrix/mat4.js  mat4.scalar.translate = function (out, a, v) {\n  static translate(out, x, y, z) {\n    out[12] = out[0] * x + out[4] * y + out[8] * z + out[12];\n    out[13] = out[1] * x + out[5] * y + out[9] * z + out[13];\n    out[14] = out[2] * x + out[6] * y + out[10] * z + out[14];\n    out[15] = out[3] * x + out[7] * y + out[11] * z + out[15];\n  }\n}\n","import { Matrix4, Vector3 } from \"../vendor/math\";\n\nconst DEG_2_RAD = Math.PI / 180;\n\nexport default class Transformable {\n  transform: TransformType;\n  constructor() {\n    this.initTransform();\n  }\n\n  initTransform() {\n    this.transform = {\n      position: new Vector3(0, 0, 0),\n      scale: new Vector3(1, 1, 1),\n      rotation: new Vector3(0, 0, 0),\n      viewMatrix: new Matrix4(),\n\n      // Going to store how to move.\n      right: new Vector3(0, 0, 0),\n      up: new Vector3(0, 0, 0),\n      forward: new Vector3(0, 0, 0),\n      DEG_2_RAD: DEG_2_RAD,\n    };\n\n    return this;\n  }\n\n  setPosition(x, y, z) {\n    this.transform.position.set(x, y, z);\n    return this;\n  }\n  addRotation(x, y, z) {\n    this.transform.rotation.x += x;\n    this.transform.rotation.y += y;\n    this.transform.rotation.z += z;\n    return this;\n  }\n\n  updateDirection = () => {\n    const { right, up, forward, viewMatrix } = this.transform;\n    Matrix4.transformVec4(right, [1, 0, 0, 0], viewMatrix.raw); //\n    Matrix4.transformVec4(up, [0, 1, 0, 0], viewMatrix.raw); //Y\n    Matrix4.transformVec4(forward, [0, 0, 1, 0], viewMatrix.raw); //Z\n  };\n\n  updateViewMatrix = () => {\n    const { viewMatrix, position, rotation, scale } = this.transform;\n    viewMatrix\n      .reset() // Back to identity matrix (1, 0, 0, 0 , 1 ...)\n      .vtranslate(position)\n      .rotateX(rotation.x * DEG_2_RAD)\n      .rotateZ(rotation.z * DEG_2_RAD)\n      .rotateY(rotation.y * DEG_2_RAD)\n      .vscale(scale);\n  };\n}\n\nexport interface TransformType {\n  position: Vector3;\n  scale: Vector3;\n  rotation: Vector3;\n  right: Vector3;\n  up: Vector3;\n  forward: Vector3;\n  viewMatrix: Matrix4;\n  DEG_2_RAD: number;\n}\n","import Transformable from \"./transformable\";\nexport default class Model extends Transformable {\n  mesh: MeshObject;\n  constructor(mesh: MeshObject) {\n    super();\n    this.mesh = mesh;\n  }\n\n  static create = (\n    gl: MyWebGL2RenderingContext,\n    data: string\n  ): Model | null => {\n    const { vertices, indices, uvs, norms } = Model.loadObjectSourceToVertices(\n      data\n    );\n    if (vertices.length === 0 || indices.length === 0) {\n      console.error(\"Data is malformed.\");\n      return null;\n    }\n    const mesh = gl.createMeshVAO(\"object\", indices, vertices, norms, uvs);\n    return new Model(mesh);\n  };\n\n  // Need to build triangles from our object data.\n  static loadObjectSourceToVertices = (source: string, flipYUV = false) => {\n    // Coming from index.html, ideally this will be a dropzone in the future.\n    const lines = source?.split(\"\\n\");\n\n    // Store what's in the object file here\n    const sourceVertices: number[][] = [];\n    const sourceUV: number[][] = [];\n    const sourceNormals: number[][] = [];\n\n    const finalVertices: number[] = []; // float32\n    const finalUV: number[] = []; // float32\n    const finalNormals: number[] = []; //float32\n    const finalIndices: number[] = []; //uInt16\n\n    const cache: { [vertices: string]: number } = {};\n    let cnt = 0;\n\n    lines?.forEach((untrimmedLine) => {\n      const line = untrimmedLine.trim(); // remove whitespace\n      const splitLine = line.split(\" \");\n      const startingChar = splitLine[0];\n      switch (startingChar) {\n        case \"v\":\n          sourceVertices.push(splitLine.slice(1).map(parseFloat)); // get the verts\n          break;\n        case \"vn\":\n          sourceNormals.push(splitLine.slice(1).map(parseFloat)); // get the normals\n          break;\n        case \"vt\":\n          sourceUV.push(\n            splitLine.slice(1).map((val, i) => {\n              const correctVal =\n                i == 1 && flipYUV ? String(1 - Number(val)) : val;\n              return parseFloat(correctVal);\n            })\n          ); // get the UV coord\n          break;\n        case \"f\": {\n          const indices = splitLine\n            .slice(1)\n            .map((inds) => inds.split(\"/\"))\n            .map((inds) => {\n              const [vI, uvI, nI] = inds;\n              return [\n                vI ? Number(vI) - 1 : null,\n                uvI ? Number(uvI) - 1 : null,\n                nI ? Number(nI) - 1 : null,\n              ];\n            });\n          const isQuad = indices.length > 3;\n          const lastFace = isQuad ? indices.pop() : undefined;\n\n          // Push in the verts of the triangle\n          indices.forEach((i) => {\n            const keyForCache = String(i);\n            const cachedIndex = cache[keyForCache];\n            if (cachedIndex !== undefined) {\n              finalIndices.push(cachedIndex);\n            } else {\n              const [vI, uvI, nI] = i;\n              finalIndices.push(cnt);\n              if (vI !== null) {\n                finalVertices.push(...sourceVertices[vI]);\n              }\n              if (uvI !== null) {\n                finalUV.push(...sourceUV[uvI]);\n              }\n              if (nI !== null) {\n                finalNormals.push(...sourceNormals[nI]);\n              }\n              cache[keyForCache] = cnt;\n              cnt += 1;\n            }\n          });\n\n          // add the second triangle and last vert if quad\n          if (lastFace) {\n            const keyForCache = String(lastFace);\n            const cachedIndex = cache[keyForCache];\n            if (cachedIndex !== undefined) {\n              finalIndices.push(\n                finalIndices[finalIndices.length - 1],\n                cachedIndex,\n                finalIndices[finalIndices.length - 3]\n              );\n            } else {\n              finalIndices.push(\n                finalIndices[finalIndices.length - 1],\n                cnt,\n                finalIndices[finalIndices.length - 3]\n              );\n              const [vI, uvI, nI] = lastFace;\n              if (vI !== null) {\n                finalVertices.push(...sourceVertices[vI]);\n              }\n              if (uvI !== null) {\n                finalUV.push(...sourceUV[uvI]);\n              }\n              if (nI !== null) {\n                finalNormals.push(...sourceNormals[nI]);\n              }\n              cnt += 1;\n            }\n          }\n          break;\n        }\n      }\n    });\n\n    console.log({\n      sourceVertices,\n      finalIndices,\n      finalVertices,\n      sourceUV,\n      finalUV,\n      finalNormals,\n    });\n\n    return {\n      vertices: finalVertices,\n      indices: finalIndices,\n      uvs: finalUV,\n      norms: finalNormals,\n    };\n  };\n}\n","import { Matrix4 } from \"../vendor/math\";\nimport Transformable from \"./transformable\";\n\nexport class Camera extends Transformable {\n  projectionMatrix: Matrix4;\n  viewMatrix: Matrix4;\n  viewMatrixState: Matrix4;\n  resetMatrix: () => Matrix4;\n  constructor(gl: MyWebGL2RenderingContext, fov = 45, near = 0.1, far = 100.0) {\n    super();\n    this.viewMatrixState = new Float32Array(16); // Cache current state\n    this.resetMatrix = this._setPerspective(gl, fov, near, far);\n    this.projectionMatrix = this.resetMatrix();\n  }\n\n  _setPerspective = (gl, fov, near, far) => {\n    return () => {\n      const projectionMatrix = new Matrix4();\n      Matrix4.perspective(\n        projectionMatrix.raw,\n        fov,\n        gl.canvas.width / gl.canvas.height,\n        near,\n        far\n      );\n      return projectionMatrix;\n    };\n  };\n\n  panX(velocity: number) {\n    this.transform.position.x += this.transform.right[0] * velocity;\n  }\n  panY(velocity: number) {\n    this.transform.position.y += this.transform.up[1] * velocity;\n  }\n  panZ(velocity: number) {\n    this.transform.position.z += this.transform.forward[2] * velocity;\n  }\n\n  updateViewMatrix = () => {\n    this.transform.viewMatrix\n      .reset()\n      .rotateX(this.transform.rotation.x * this.transform.DEG_2_RAD)\n      .rotateY(this.transform.rotation.y * this.transform.DEG_2_RAD)\n      .vtranslate(this.transform.position);\n\n    this.updateDirection();\n\n    // Cameras work by doing the inverse transformation of all meshes!\n    Matrix4.invert(this.viewMatrixState, this.transform.viewMatrix.raw);\n    return this.viewMatrixState;\n  };\n}\n\nexport class CameraController {\n  canvas: HTMLCanvasElement;\n  camera: Camera;\n  offsetX: number;\n  offsetY: number;\n  rotateRate: number;\n  panRate: number;\n  zoomRate: number;\n  initX: number;\n  initY: number;\n  prevX: number;\n  prevY: number;\n  onUpHandler: (e: MouseEvent) => void;\n  onMoveHandler: (e: MouseEvent) => void;\n  constructor(gl: MyWebGL2RenderingContext, camera: Camera) {\n    this.canvas = gl.canvas; //Need access to the canvas html element, mainly to access events\n    this.camera = camera; //Reference to the camera to control\n\n    const box = gl.canvas.getBoundingClientRect();\n    this.offsetX = box.left; //Help calc global x,y mouse cords.\n    this.offsetY = box.top;\n\n    this.rotateRate = -300; //How fast to rotate, degrees per dragging delta\n    this.panRate = 5; //How fast to pan, max unit per dragging delta\n    this.zoomRate = 100; //How fast to zoom or can be viewed as forward/backward movement\n\n    this.initX = 0; //Starting X,Y position on mouse down\n    this.initY = 0;\n    this.prevX = 0; //Previous X,Y position on mouse move\n    this.prevY = 0;\n\n    this.onUpHandler = this.onMouseUp;\n    this.onMoveHandler = this.onMouseMove;\n\n    window.addEventListener(\"mousedown\", (e) => this.onMouseDown(e));\n    window.addEventListener(\n      \"wheel\",\n      (e) => {\n        e.preventDefault(); // Need to prevent window from zooming\n        this.onMouseWheel(e);\n      },\n      { passive: false }\n    ); // Need to use preventDefault\n  }\n\n  //Transform mouse x,y cords to something useable by the canvas.\n  getMouseVec2 = (e: MouseEvent): { x: number; y: number } => {\n    return {\n      x: e.pageX - this.offsetX,\n      y: e.pageY - this.offsetY,\n    };\n  };\n\n  //Begin listening for dragging movement\n  onMouseDown = (e: MouseEvent): void => {\n    this.initX = this.prevX = e.pageX - this.offsetX;\n    this.initY = this.prevY = e.pageY - this.offsetY;\n\n    window.addEventListener(\"mouseup\", this.onUpHandler);\n    window.addEventListener(\"mousemove\", this.onMoveHandler);\n  };\n\n  //End listening for dragging movement\n  onMouseUp = (): void => {\n    window.removeEventListener(\"mouseup\", this.onUpHandler);\n    window.removeEventListener(\"mousemove\", this.onMoveHandler);\n  };\n\n  onMouseWheel = (e: WheelEvent): void => {\n    const delta = Math.max(-1, Math.min(1, e.deltaY || -e.detail)); //Try to map wheel movement to a number between -1 and 1\n    this.camera.panZ(delta * (this.zoomRate / this.canvas.height)); //Keep the movement speed the same, no matter the height diff\n  };\n  onMouseMove = (e: MouseEvent): void => {\n    const x = e.pageX - this.offsetX, //Get X,y where the canvas's position is origin.\n      y = e.pageY - this.offsetY,\n      dx = x - this.prevX, //Difference since last mouse move\n      dy = y - this.prevY;\n\n    //When shift is being held down, we pan around else we rotate.\n    if (!e.shiftKey) {\n      this.camera.transform.rotation.y +=\n        dx * (this.rotateRate / this.canvas.width);\n      this.camera.transform.rotation.x +=\n        dy * (this.rotateRate / this.canvas.height);\n    } else {\n      this.camera.panX(-dx * (this.panRate / this.canvas.width));\n      this.camera.panY(dy * (this.panRate / this.canvas.height));\n    }\n\n    this.prevX = x;\n    this.prevY = y;\n  };\n}\n","export default class Dropbox {\n  el: HTMLElement | null;\n  constructor(id: string, loadCallback: function) {\n    this.el = document.getElementById(id);\n    this.loadCallback = loadCallback\n    if (this.el) {\n      this.el.addEventListener(\"dragover\", this.dragOverHandler.bind(this));\n      this.el.addEventListener(\"drop\", this.dropHandler.bind(this));\n    }\n  }\n  dragOverHandler(ev: DragEvent): void {\n    // Prevent default behavior (Prevent file from being opened)\n    ev.preventDefault();\n  }\n  dropHandler(ev: DragEvent): void {\n    // Prevent default behavior (Prevent file from being opened)\n    ev.preventDefault();\n\n    if (ev?.dataTransfer?.items) {\n      // Use DataTransferItemList interface to access the file(s)\n      for (let i = 0; i < ev.dataTransfer.items.length; i++) {\n        // If dropped items aren't files, reject them\n        if (ev.dataTransfer.items[i].kind === \"file\") {\n          const file = ev.dataTransfer.items[i].getAsFile();\n          file?.text().then((txt) => {\n            console.log(txt);\n            this.data = txt;\n            this.loadCallback(this.data)\n          });\n          console.log(\"... file[\" + i + \"].name = \" + file?.name);\n        }\n      }\n    } else if (ev?.dataTransfer?.files) {\n      // Use DataTransfer interface to access the file(s)\n      for (let i = 0; i < ev.dataTransfer.files.length; i++) {\n        console.log(\n          \"... file[\" + i + \"].name = \" + ev.dataTransfer.files[i].name\n        );\n      }\n    }\n  }\n}\n","import getGLInstance from \"./gl\";\nimport MainObjectProgram from \"./programs/mainObject\";\nimport Renderer from \"./renderer\";\nimport Model from \"./model\";\nimport { Camera, CameraController } from \"./camera\";\nimport { Matrix4 } from \"../vendor/math\";\nimport islandFile from \"../assets/island.obj\";\nimport pirateFile from \"../assets/pirate.obj\";\n// import testTextureFile from \"../assets/texture_test.jpg\";\nimport pirateTextureFile from \"../assets/pirate.png\";\nimport cubeFile from \"../assets/cube.obj\";\nimport Dropbox from \"./dropbox\";\n\nconst CANVAS_ID = \"gl\";\n\nconst loadModel = (gl: MyWebGL2RenderingContext, data: string) => {\n  return Model.create(gl, data);\n};\n\nconst index = function () {\n  let model: Model | null = null;\n  let isStartingCube = <null | boolean>null;\n\n  const gl = getGLInstance(CANVAS_ID);\n\n  const camera = new Camera(gl);\n  camera.setPosition(0, 0, 5.0);\n  new CameraController(gl, camera);\n\n  const fetchFile = (name: string) => {\n    let filePath;\n    let position: number[];\n    switch (name) {\n      case \"cube\":\n        filePath = cubeFile;\n        position = [0, 0, 5.0];\n        break;\n      case \"pirate\":\n        filePath = pirateFile;\n        position = [0, 1.0, 7.0];\n        break;\n      case \"island\":\n        filePath = islandFile;\n        position = [0, 0, 20.0];\n        break;\n      default:\n        filePath = cubeFile;\n        position = [0, 0, 5.0];\n    }\n    fetch(filePath)\n      .then((r) => r.text())\n      .then((data) => {\n        if (!data) {\n          alert(\"Object data not found\");\n          return null;\n        }\n\n        model = loadModel(gl, data);\n        camera.initTransform().setPosition(...position);\n        isStartingCube = isStartingCube === null ? true : false;\n\n        // fetch(islandFile)\n        //   .then((img) => img.blob())\n        //   .then((blob) => {\n        //     const url = URL.createObjectURL(blob);\n        //     const img = new Image();\n        //     img.onload = () => {\n        //       const texture = gl.loadTexture(\"texture\", img, true);\n        //       if (texture) {\n        //         shader.setTextureID(texture);\n        //       }\n\n        //       URL.revokeObjectURL(url);\n        //       loaded = true;\n        //     };\n        //     img.src = url;\n        //   });\n      });\n  };\n  document\n    .getElementById(\"model_selection\")\n    ?.addEventListener(\"change\", (e) => {\n      const name = e?.target?.value;\n      fetchFile(name);\n    });\n\n  document.getElementById(\"input_group\")?.addEventListener(\"mousedown\", (e) => {\n    e.stopPropagation();\n  });\n\n  window.addEventListener(\"resize\", () => {\n    gl.setWindowSize(1, 1);\n  });\n\n  fetchFile(\"cube\");\n\n  new Dropbox(\"drop_zone\", (data: string) => {\n    isStartingCube = false;\n    model = loadModel(gl, data);\n    camera.initTransform().setPosition(0, 0, 5);\n  });\n\n  gl.setWindowSize(1, 1).setClearColor(0, 0, 0, 0);\n\n  const shader = new MainObjectProgram(gl);\n  const renderer = new Renderer(gl);\n\n  // TODO: if we add auto rotate again, need to rethink fps cb location.\n  const rendererCallBack = () => {\n    if (!model) {\n      return;\n    }\n    if (isStartingCube) {\n      camera.addRotation(0, 0.1, 0);\n    }\n    model.updateViewMatrix();\n    camera.updateViewMatrix();\n    // calculate MVP\n    const mvpData = Matrix4.identity();\n    Matrix4.mult(mvpData, camera.projectionMatrix.raw, camera.viewMatrixState);\n    Matrix4.mult(mvpData, mvpData, model.transform.viewMatrix.raw);\n\n    shader.activate().preRender(mvpData).render(model).deactivate();\n  };\n\n  renderer.clear();\n  renderer.draw(rendererCallBack);\n};\n\nwindow.onload = () => index();\n"]}